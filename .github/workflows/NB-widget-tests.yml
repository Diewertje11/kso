name: NB-widget-tests
on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - Dockerfile
      - kso_utils/requirements
      - yolov5_tracker/requirements
      - yolov5/requirements
  pull_request: 
    branches:
      - master
      - dev
    paths-ignore:
      - Dockerfile
      - kso_utils/requirements
      - yolov5_tracker/requirements
      - yolov5/requirements
  workflow_run:
    workflows: [build-container]
    types: [completed]

jobs:
  configure: 
  # Get the gitlab runner id to be able to checkout the repository. Otherwise you do not have permission.
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"

  check-image:
  # Based on if build-container has run or not, we decide on the tag of the image we load in to run the test.
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.find-image-tag.outputs.tag }}
    steps:
      - name: find-image-tag
        id: find-image-tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ] ; then 
            echo "tag=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.event_name }}" = "pull_request" ] ; then 
            echo "tag=${{ github.base_ref }}" >> "$GITHUB_OUTPUT" 
          elif [ "${{ github.event_name }}" = "push" ] ; then 
            echo "tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT" 
          fi 
        shell: bash

  test-notebooks-and-widgets:
    runs-on: ubuntu-latest
    needs: [configure, check-image]
    container:
      image: ghcr.io/ocean-data-factory-sweden/kso:${{ needs.check-image.outputs.tag }}
      options: --user ${{ needs.configure.outputs.uid_gid }}
      credentials:
        username: '${{ github.actor }}'
        password: '${{ secrets.GITHUB_TOKEN }}'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install pytest
        run: pip install pytest
      - name: Login W&B
        shell: bash
        env:
          WANDB_API: ${{ secrets.WANDB_KEY }}
        run: wandb login "$WANDB_API"
      - name: Run notebook and widget tests
        id: tests
        run: >-
          export "WANDB_DIR=$(mktemp -d)" && export WANDB_CACHE_DIR="$WANDB_DIR" &&
          cp src/multi_tracker_zoo.py yolov5_tracker/trackers/multi_tracker_zoo.py && python3 -m pytest --disable-warnings test/widget-tests.py && python3 -m pytest --disable-warnings --zoo_user=${{ secrets.ZOO_USERNAME }} --zoo_pass=${{ secrets.ZOO_TOKEN }} test/notebook-tests.py
